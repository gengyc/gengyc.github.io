<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>gyc</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://gengyc.github.io/"/>
  <updated>2016-12-09T02:43:17.000Z</updated>
  <id>http://gengyc.github.io/</id>
  
  <author>
    <name>gyc</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用Hexo和GitHub搭建博客教程，支持在新电脑同步管理项目和主题</title>
    <link href="http://gengyc.github.io/2016/11/11/%E4%BD%BF%E7%94%A8Hexo%E5%92%8CGitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B%EF%BC%8C%E6%94%AF%E6%8C%81%E5%9C%A8%E6%96%B0%E7%94%B5%E8%84%91%E5%90%8C%E6%AD%A5%E7%AE%A1%E7%90%86%E9%A1%B9%E7%9B%AE%E5%92%8C%E4%B8%BB%E9%A2%98/"/>
    <id>http://gengyc.github.io/2016/11/11/使用Hexo和GitHub搭建博客教程，支持在新电脑同步管理项目和主题/</id>
    <published>2016-11-11T02:59:32.000Z</published>
    <updated>2016-12-09T02:43:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用 GitHubPages + hexo 可以很便捷地搭建个人博客，githubpages提供 300M 的免费空间，做博客够用了，hexo 是一个静态页面发布框架。<br>下面介绍采用 gitHub + hexo 搭建个人博客，项目代码托管在GitHub，可以在不同电脑管理自己的博客。并且，自己下载的hexo主题也可以同步管理。</p>
<a id="more"></a>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>本地安装git, node</p>
<h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>使用npm安装hexo，官方提供的详细安装方法：<br><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">https://hexo.io/zh-cn/docs/</a></p>
<p>安装一些必要的插件：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$  sudo  npm install hexo-deployer-git --save    //安装Git部署器</div><div class="line">$  sudo npm install hexo-generator-index --save </div><div class="line">$  sudo npm install hexo-generator-archive --save </div><div class="line">$  sudo npm install hexo-generator-category --save </div><div class="line">$  sudo npm install hexo-generator-tag --save </div><div class="line">$  sudo npm install hexo-server --save </div><div class="line">$  sudo npm install hexo-deployer-heroku --save </div><div class="line">$  sudo npm install hexo-deployer-rsync --save </div><div class="line">$  sudo npm install hexo-deployer-openshift --save </div><div class="line">$  sudo npm install hexo-renderer-marked@0.2 --save </div><div class="line">$  sudo npm install hexo-renderer-stylus@0.2 --save </div><div class="line">$  sudo npm install hexo-generator-feed@1 --save </div><div class="line">$  sudo npm install hexo-generator-sitemap@1 --save</div></pre></td></tr></table></figure>
<h2 id="GitHub准备工作"><a href="#GitHub准备工作" class="headerlink" title="GitHub准备工作"></a>GitHub准备工作</h2><p>1.在github上新建一个仓库，命名规则为 <code>git用户名.github.io</code>。仓库默认有个master分支。</p>
<p>2.另新建一个分支 gh_pages，并将此分支设置为 default_branch（默认分支）。<br>该分支用来存放和管理整个开发项目的代码，我们只需要手动管理gh_pages分支。<br>通过 <code>hexo d</code> 部署命令会将生成的文件自动提交到master分支。</p>
<p>3.将GitHub的空项目仓库clone到本地。本地新建一个分支 gh_pages, 切换到这个分支。<br>然后一直在此分支下开发，推送远程的时候也是推送到gh_pages同名远程分支。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$  git <span class="built_in">clone</span> https://github.com/gengyc/gengyc.github.io</div><div class="line">$  <span class="built_in">cd</span> gengyc.github.io</div><div class="line">$  git checkout -b gh_pages</div></pre></td></tr></table></figure>
<h2 id="hexo流程"><a href="#hexo流程" class="headerlink" title="hexo流程"></a>hexo流程</h2><h4 id="1-新建本地站点"><a href="#1-新建本地站点" class="headerlink" title="1. 新建本地站点"></a>1. 新建本地站点</h4><p>安装完hexo后，在项目根目录(/gengyc.github.io)下，运行以下命令，会自动生成项目所需文件。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$  hexo init</div><div class="line">$  npm install</div></pre></td></tr></table></figure></p>
<p>完成后，文件夹中目录如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">├── _config.yml</div><div class="line">├── package.json</div><div class="line">├── scaffolds</div><div class="line">├── source</div><div class="line">|    └── _posts</div><div class="line">|</div><div class="line">└── themes</div><div class="line"></div><div class="line">因为要将此项目推送到远程GitHub，我们需要添加一个 .gitignore 文件，忽略掉安装的插件，因为其没必要提交到远程：</div><div class="line"></div><div class="line">// .gitignore</div><div class="line">node_modules</div></pre></td></tr></table></figure></p>
<p>然后，运行 <code>hexo server</code>启动站点。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$  hexo server   // 可简写为 hexo s</div></pre></td></tr></table></figure>
<p>站点默认链接为 <a href="http://0.0.0.0:4000" target="_blank" rel="external">http://0.0.0.0:4000</a>  或 <a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a> ，在浏览器打开此地址即可看到站点了。<br>保存编辑文章的时候，hexo server 会监听项目文件的改动，而且会自动刷新本地站点页面。</p>
<h4 id="2-新建文章"><a href="#2-新建文章" class="headerlink" title="2. 新建文章"></a>2. 新建文章</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$  hexo new <span class="string">'文章标题'</span></div></pre></td></tr></table></figure>
<p>会在 source/_posts/ 目录下生成一个新的 markdown 格式的文件。<br>在此文件编辑和保存自己的新文章。</p>
<h4 id="3-生成-html-js-站点文件"><a href="#3-生成-html-js-站点文件" class="headerlink" title="3. 生成 html  js 站点文件"></a>3. 生成 html  js 站点文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$  hexo generate    // 可简写为 hexo g</div></pre></td></tr></table></figure>
<p>会在 public 文件夹中生成页面需要的完整的html js等文件。</p>
<h4 id="4-发布"><a href="#4-发布" class="headerlink" title="4. 发布"></a>4. 发布</h4><p>发布之前，先需要在根目录的 _config.yml 配置文件里关联上你自己的 github 地址。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">// _config.yml</div><div class="line"></div><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repository: https://github.com/gengyc/gengyc.github.io</div><div class="line">  branch: master</div><div class="line"></div><div class="line">// 然后在命令行运行 hexo deploy，首次运行会按要求填写GitHub账号和密码</div><div class="line">$  hexo deploy     // 可简写为 hexo d</div></pre></td></tr></table></figure>
<p>这样，会把 public 文件夹里面的文件，推送到github仓库里。<br>然后，在浏览器中打开 <a href="https://gengyc.github.io/">https://gengyc.github.io/</a> 就可以看到所搭建的线上的静态页面了。</p>
<h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><p>在网上找到自己喜欢的主题，clone到 themes 文件夹下。<br>以安装<a href="https://github.com/ahonn/hexo-theme-even" target="_blank" rel="external">even</a>主题为例，在根目录下运行如下命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$  git  <span class="built_in">clone</span>  https://github.com/ahonn/hexo-theme-even  themes/even</div></pre></td></tr></table></figure>
<p>修改根目录下的 _config.yml 文件，将主题名字改为 even</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># Extensions</div><div class="line">## Plugins: https://hexo.io/plugins/</div><div class="line">## Themes: https://hexo.io/themes/</div><div class="line">theme: even</div></pre></td></tr></table></figure>
<p>运行以下命令就可以看到新主题的效果了：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$  hexo g    // 生成</div><div class="line">$  hexo s    // 开启本地服务预览</div><div class="line">$  hexo d    // 发布</div></pre></td></tr></table></figure>
<p>一定要把主题文件也提交到远程仓库，可以自己自定义主题样式，换电脑后还可以同步自己配置的主题。<br>此时本地的git仓库跟踪不到 /themes 文件下新加的主题文件。我们只需要把 /themes/even 文件目录下的 <code>.git</code> 文件夹删除就可以了。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$  rm -rf .git</div></pre></td></tr></table></figure>
<p>然后 /themes/even 下的文件就可以被 git 跟踪到了。</p>
<h2 id="推送到远程"><a href="#推送到远程" class="headerlink" title="推送到远程"></a>推送到远程</h2><p>文章发布完后，我们把本地仓库推送到远程仓库的 gh_pages 分支。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$  git commit -am <span class="string">'add hexo'</span></div><div class="line">$  git push origin gh_pages</div></pre></td></tr></table></figure>
<h2 id="在新电脑上同步这个项目-包括主题-，步骤："><a href="#在新电脑上同步这个项目-包括主题-，步骤：" class="headerlink" title="在新电脑上同步这个项目(包括主题)，步骤："></a>在新电脑上同步这个项目(包括主题)，步骤：</h2><p>$  git clone <a href="https://github.com/gengyc/gengyc.github.io" target="_blank" rel="external">https://github.com/gengyc/gengyc.github.io</a><br>$  cd gengyc.github.io      // 默认分支为 gh_pages<br>$  npm install hexo -g<br>// 此时直接运行npm install，不需要在项目根目录运行hexo init命令，否则会将所有文件初始化掉<br>$  npm install<br>$  hexo s        // 看是否能成功开启本地服务了<br>$  hexo new ‘new article title’<br>$  hexo g<br>$  hexo d<br>$  git commit -am ‘add hexo files’<br>$  git push origin gh_pages</p>
<p>end.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用 GitHubPages + hexo 可以很便捷地搭建个人博客，githubpages提供 300M 的免费空间，做博客够用了，hexo 是一个静态页面发布框架。&lt;br&gt;下面介绍采用 gitHub + hexo 搭建个人博客，项目代码托管在GitHub，可以在不同电脑管理自己的博客。并且，自己下载的hexo主题也可以同步管理。&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://gengyc.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
