{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/even/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/even/source/css/style.scss","path":"css/style.scss","modified":0,"renderable":1},{"_id":"themes/even/source/fonts/iconfont.css","path":"fonts/iconfont.css","modified":0,"renderable":1},{"_id":"themes/even/source/js/theme.js","path":"js/theme.js","modified":0,"renderable":1},{"_id":"themes/even/source/js/zepto.min.js","path":"js/zepto.min.js","modified":0,"renderable":1},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.eot","path":"fonts/chancery/apple-chancery-webfont.eot","modified":0,"renderable":1},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.woff2","path":"fonts/chancery/apple-chancery-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.woff","path":"fonts/chancery/apple-chancery-webfont.woff","modified":0,"renderable":1},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.ttf","path":"fonts/chancery/apple-chancery-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/even/source/fonts/iconfont/demo.html","path":"fonts/iconfont/demo.html","modified":0,"renderable":1},{"_id":"themes/even/source/fonts/iconfont/iconfont.eot","path":"fonts/iconfont/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/even/source/fonts/iconfont/demo.css","path":"fonts/iconfont/demo.css","modified":0,"renderable":1},{"_id":"themes/even/source/fonts/iconfont/iconfont.svg","path":"fonts/iconfont/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/even/source/fonts/iconfont/iconfont.ttf","path":"fonts/iconfont/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/even/source/fonts/iconfont/iconfont.css","path":"fonts/iconfont/iconfont.css","modified":0,"renderable":1},{"_id":"themes/even/source/fonts/iconfont/iconfont.woff","path":"fonts/iconfont/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.svg","path":"fonts/chancery/apple-chancery-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/even/.gitignore","hash":"c2a79708cb5d4919377c259bb21ebde7530ba997","modified":1478335504000},{"_id":"source/.DS_Store","hash":"809c3a32f40ae5c2277b3a3a08f0d68b8ed82f2c","modified":1478685513000},{"_id":"themes/even/README.md","hash":"7041571a98bf09a35e0de1793caebd088c231f44","modified":1478335504000},{"_id":"themes/even/_config.yml","hash":"5aeceb9fc87facb00bd387988aa4ba726cf5fed0","modified":1478335504000},{"_id":"themes/even/LICENSE","hash":"65da563ec8598aecdbf3f49968b85a117543ac54","modified":1478335504000},{"_id":"themes/even/_config.yml.sample","hash":"4d96e112a4736a4eea81dcb61fa554d1a9389326","modified":1478335504000},{"_id":"themes/even/package.json","hash":"2c6d808bbbb977b426e3afba61224d895eb3187e","modified":1478335504000},{"_id":"source/_posts/使用Hexo和GitHub搭建博客教程，支持在新电脑同步管理项目和主题.md","hash":"6fde2e76436c83359163577b8f82414bc0061347","modified":1481251397000},{"_id":"themes/even/languages/default.yml","hash":"0e1c336886a5b31d592bccc07a3e978a28de5318","modified":1478335504000},{"_id":"themes/even/languages/en.yml","hash":"7edcef06e5a8307e81e1625c61a3e06bedcd9faf","modified":1478335504000},{"_id":"themes/even/languages/fr-fr.yml","hash":"30b1b5712fcaec8424b34c50af9030538c36a066","modified":1478335504000},{"_id":"themes/even/languages/ru.yml","hash":"0fd880e9292ab3015ceab359587a458aa7483db2","modified":1478335504000},{"_id":"themes/even/languages/zh-cn.yml","hash":"2e717b38a271e27e22ac107d925f19b7c0ce4a7f","modified":1478335504000},{"_id":"themes/even/doc/doc_en.md","hash":"5e0b580597943493a953102ddea101fc71d7c240","modified":1478335504000},{"_id":"themes/even/doc/doc_zh.md","hash":"1128a1361ea9e2729352ba6376ef11aa0e36fa83","modified":1478335504000},{"_id":"themes/even/layout/about.jade","hash":"2826aa452d3ff1e6aa37f6862fcc11f61c1d68d1","modified":1478335504000},{"_id":"themes/even/layout/categories.jade","hash":"80d95fcc7f4209e9eb7a2de4be33d2e3b83dff1b","modified":1478335504000},{"_id":"themes/even/layout/index.jade","hash":"bb47055acff9f0f78e3da3b1b8597658523cc990","modified":1478335504000},{"_id":"themes/even/layout/archive.jade","hash":"0f5127dbc963d676bc6331b1b5ed49c22c8122bf","modified":1478335504000},{"_id":"themes/even/layout/page.jade","hash":"6cc61ebc24882be9a2bd986b674b3664c189a14d","modified":1478335504000},{"_id":"themes/even/layout/post.jade","hash":"3d7b80616140acd5ca7d1eec4252e2c19405860b","modified":1478335504000},{"_id":"themes/even/layout/tags.jade","hash":"0a28e85a89daaf5edf82c374402a8e15340c4cda","modified":1478335504000},{"_id":"themes/even/source/favicon.ico","hash":"0505cec3b99707df7a681de37177b3cf7950cc5d","modified":1478335504000},{"_id":"themes/even/source/css/_setting.scss","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1478335504000},{"_id":"themes/even/layout/mixins/analytics.jade","hash":"e4650d862d74e7e60cb6532b570fe1c59d2e6a94","modified":1478335504000},{"_id":"themes/even/layout/mixins/categories.jade","hash":"25bf2fb3576cb5ab405f1049c76f9a40721408f6","modified":1478335504000},{"_id":"themes/even/layout/mixins/comment.jade","hash":"b941c45bcc77799137a98361676b192c147efe1c","modified":1478335504000},{"_id":"themes/even/layout/mixins/container.jade","hash":"d7907370b84077baa3c20fedc045e89851ed6ef3","modified":1478335504000},{"_id":"themes/even/layout/mixins/tags.jade","hash":"e2ad495d0beca32cdd8dd4e7311671e479806a34","modified":1478335504000},{"_id":"themes/even/layout/mixins/paginator.jade","hash":"e46f7ec3ca4b8fee7e920bcd1f0b7eed3d040abb","modified":1478335504000},{"_id":"themes/even/layout/partial/head.jade","hash":"65f421e8ed331c478f1a33923ef918d3d151f168","modified":1478335504000},{"_id":"themes/even/layout/partial/footer.jade","hash":"da840405af8da2e9d3ac86d60b52ac68d55e97ef","modified":1478335504000},{"_id":"themes/even/layout/partial/layout.jade","hash":"87057d15bb2bcd48bcf2955470d333ef55478f0a","modified":1478335504000},{"_id":"themes/even/layout/partial/header.jade","hash":"089b367937a76b44a757eed05bd3d9e428a831cc","modified":1478335504000},{"_id":"themes/even/layout/partial/meta.jade","hash":"683ab582b3b09ec7b19a3f5f771e8d9e8c43548f","modified":1478335504000},{"_id":"themes/even/layout/partial/script.jade","hash":"359e181905938a253f37e064c54337f3b8c2a7f9","modified":1478335504000},{"_id":"themes/even/source/css/_global.scss","hash":"a436c48d366ba40a320b34805868bdefb836b804","modified":1478335504000},{"_id":"themes/even/source/css/_normalize.scss","hash":"87d5cd2a60780e1796dc27deeb5337a9d48e39a8","modified":1478335504000},{"_id":"themes/even/source/css/style.scss","hash":"1b628036c1701537e64a065e9d2d408d3c16fb7a","modified":1478335504000},{"_id":"themes/even/source/fonts/iconfont.css","hash":"e88809b08df63794c3a433fee326bd605719ee0e","modified":1478335504000},{"_id":"themes/even/source/js/theme.js","hash":"3f00d139ce3b5eeda3d37791ae19f53df60120c8","modified":1478335504000},{"_id":"themes/even/source/js/zepto.min.js","hash":"d2255479efddcabfc986c2407f17cea688d008b7","modified":1478335504000},{"_id":"themes/even/source/css/partial/_archive.scss","hash":"6a8848e30b92e722f9a613dfe85a7adfd0744c3c","modified":1478335504000},{"_id":"themes/even/source/css/partial/_code.scss","hash":"04e57b1660db1b9b13b48548677a39008865b336","modified":1478335504000},{"_id":"themes/even/source/css/partial/_categories.scss","hash":"dc8a2e30791887ce4d116901c58ccea7daab7c8b","modified":1478335504000},{"_id":"themes/even/source/css/partial/_footer.scss","hash":"5f106eb264ee3052f8bce83476daad06cb6d969a","modified":1478335504000},{"_id":"themes/even/source/css/partial/_header.scss","hash":"ca3a63e8035ca2d990e72267084c352c3fbbd124","modified":1478335504000},{"_id":"themes/even/source/css/partial/_paginator.scss","hash":"dd616219333a56dc37cb468148a03e8ad08f13e3","modified":1478335504000},{"_id":"themes/even/source/css/partial/_home.scss","hash":"ed0e6640701a92fdc060841756a2409b6e2ea970","modified":1478335504000},{"_id":"themes/even/source/css/partial/_media.scss","hash":"ef20ab96d3bbb11b6f9aa20bfa0b8035d5841ab3","modified":1478335504000},{"_id":"themes/even/source/css/partial/_tags.scss","hash":"5e7338300fe1b90187dca30bc1d37adf73466d73","modified":1478335504000},{"_id":"themes/even/source/css/partial/_post.scss","hash":"68c7566c08ea2e4b66824c3ca6379caa6eb1e19a","modified":1478335504000},{"_id":"themes/even/source/css/partial/_sidebar.scss","hash":"c8911ab2f17a02a3701f48ac93c78fe7e0c298dc","modified":1478335504000},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.eot","hash":"fef78bd502f74fdbf0316123e176454cb3eb4e50","modified":1478335504000},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.woff2","hash":"afd0f74128f1c21c5a542b2e100870e74da663b6","modified":1478335504000},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.woff","hash":"95beafe485d4bdbddfecbcf3b2bc9b2d9cf5f5c5","modified":1478335504000},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.ttf","hash":"5e25c531901d8a9e37ab45a7f4acdbe5324b51b6","modified":1478335504000},{"_id":"themes/even/source/fonts/iconfont/demo.html","hash":"96046754c86a4226a61c9288cb16d750d7abd3d2","modified":1478335504000},{"_id":"themes/even/source/fonts/iconfont/iconfont.eot","hash":"73c61178be49866c64d7b891a0c5848860dc6fca","modified":1478335504000},{"_id":"themes/even/source/fonts/iconfont/demo.css","hash":"40916e7c71130fa52282f396abc767248eafb3de","modified":1478335504000},{"_id":"themes/even/source/fonts/iconfont/iconfont.svg","hash":"74f81a88069e6e3c3cee0f3b3c43af505487a8b1","modified":1478335504000},{"_id":"themes/even/source/fonts/iconfont/iconfont.ttf","hash":"78f2dfb962c5fda466474122935495a4f1796b0a","modified":1478335504000},{"_id":"themes/even/source/fonts/iconfont/iconfont.css","hash":"5837a6958acbab9d2f61658245e6eeda087b4020","modified":1478335504000},{"_id":"themes/even/source/fonts/iconfont/iconfont.woff","hash":"ea276c35e8549c055a376fc1fd9cc47b7076fa1d","modified":1478335504000},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.svg","hash":"a94e508f306a742637653f98c6e8827b11d3c142","modified":1478335504000},{"_id":"public/atom.xml","hash":"686c0d15f85c5574bc1372197b8238e3845a46d6","modified":1481251606401},{"_id":"public/sitemap.xml","hash":"1164dafbd09e560614ed9de46a8f067cedce7c43","modified":1481251606401},{"_id":"public/2016/11/11/使用Hexo和GitHub搭建博客教程，支持在新电脑同步管理项目和主题/index.html","hash":"f019e5110fa37616636360757b1323a7e254444d","modified":1481250534476},{"_id":"public/archives/index.html","hash":"83b691b5b2f69f1bf525143a3e66fd3e1cb833e1","modified":1481250534476},{"_id":"public/archives/2016/index.html","hash":"83f6cbd881b259ce705a3069f4ad32cc298e8ab6","modified":1481250534476},{"_id":"public/archives/2016/11/index.html","hash":"836a42eff717336d5d2d044fea10dd901b10bce4","modified":1481250534476},{"_id":"public/tags/hexo/index.html","hash":"4f848090488e60ab25c413699d071148b18889e2","modified":1481250534476},{"_id":"public/index.html","hash":"8ce6a6dc18c6757bd2420c8a49e59422a84d481c","modified":1481250534476},{"_id":"public/favicon.ico","hash":"0505cec3b99707df7a681de37177b3cf7950cc5d","modified":1481250534480},{"_id":"public/fonts/chancery/apple-chancery-webfont.eot","hash":"fef78bd502f74fdbf0316123e176454cb3eb4e50","modified":1481250534480},{"_id":"public/fonts/chancery/apple-chancery-webfont.woff2","hash":"afd0f74128f1c21c5a542b2e100870e74da663b6","modified":1481250534480},{"_id":"public/fonts/chancery/apple-chancery-webfont.woff","hash":"95beafe485d4bdbddfecbcf3b2bc9b2d9cf5f5c5","modified":1481250534480},{"_id":"public/fonts/chancery/apple-chancery-webfont.ttf","hash":"5e25c531901d8a9e37ab45a7f4acdbe5324b51b6","modified":1481250534480},{"_id":"public/fonts/iconfont/iconfont.eot","hash":"73c61178be49866c64d7b891a0c5848860dc6fca","modified":1481250534480},{"_id":"public/fonts/iconfont/iconfont.svg","hash":"74f81a88069e6e3c3cee0f3b3c43af505487a8b1","modified":1481250534481},{"_id":"public/fonts/iconfont/iconfont.ttf","hash":"78f2dfb962c5fda466474122935495a4f1796b0a","modified":1481250534481},{"_id":"public/fonts/iconfont/iconfont.woff","hash":"ea276c35e8549c055a376fc1fd9cc47b7076fa1d","modified":1481250534481},{"_id":"public/fonts/chancery/apple-chancery-webfont.svg","hash":"a94e508f306a742637653f98c6e8827b11d3c142","modified":1481250534487},{"_id":"public/fonts/iconfont.css","hash":"e88809b08df63794c3a433fee326bd605719ee0e","modified":1481250534497},{"_id":"public/js/theme.js","hash":"3f00d139ce3b5eeda3d37791ae19f53df60120c8","modified":1481250534497},{"_id":"public/fonts/iconfont/demo.html","hash":"96046754c86a4226a61c9288cb16d750d7abd3d2","modified":1481250534497},{"_id":"public/fonts/iconfont/demo.css","hash":"40916e7c71130fa52282f396abc767248eafb3de","modified":1481250534497},{"_id":"public/fonts/iconfont/iconfont.css","hash":"5837a6958acbab9d2f61658245e6eeda087b4020","modified":1481250534497},{"_id":"public/js/zepto.min.js","hash":"d2255479efddcabfc986c2407f17cea688d008b7","modified":1481250534497},{"_id":"public/css/style.css","hash":"cf8c2bd306e02eb524b0fa0cb439ba8d76d08c34","modified":1481250534510}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"使用Hexo和GitHub搭建博客教程，支持在新电脑同步管理项目和主题","date":"2016-11-11T02:59:32.000Z","_content":"\n使用 GitHubPages + hexo 可以很便捷地搭建个人博客，githubpages提供 300M 的免费空间，做博客够用了，hexo 是一个静态页面发布框架。\n下面介绍采用 gitHub + hexo 搭建个人博客，项目代码托管在GitHub，可以在不同电脑管理自己的博客。并且，自己下载的hexo主题也可以同步管理。\n\n<!-- more -->\n\n## 安装环境\n本地安装git, node\n\n## 安装hexo\n使用npm安装hexo，官方提供的详细安装方法：\n[https://hexo.io/zh-cn/docs/](https://hexo.io/zh-cn/docs/)\n\n安装一些必要的插件：\n\n```bash\n$  sudo  npm install hexo-deployer-git --save    //安装Git部署器\n$  sudo npm install hexo-generator-index --save \n$  sudo npm install hexo-generator-archive --save \n$  sudo npm install hexo-generator-category --save \n$  sudo npm install hexo-generator-tag --save \n$  sudo npm install hexo-server --save \n$  sudo npm install hexo-deployer-heroku --save \n$  sudo npm install hexo-deployer-rsync --save \n$  sudo npm install hexo-deployer-openshift --save \n$  sudo npm install hexo-renderer-marked@0.2 --save \n$  sudo npm install hexo-renderer-stylus@0.2 --save \n$  sudo npm install hexo-generator-feed@1 --save \n$  sudo npm install hexo-generator-sitemap@1 --save\n```\n\n## GitHub准备工作\n\n1.在github上新建一个仓库，命名规则为 `git用户名.github.io`。仓库默认有个master分支。\n\n2.另新建一个分支 gh_pages，并将此分支设置为 default_branch（默认分支）。\n该分支用来存放和管理整个开发项目的代码，我们只需要手动管理gh_pages分支。\n通过 `hexo d` 部署命令会将生成的文件自动提交到master分支。\n\n3.将GitHub的空项目仓库clone到本地。本地新建一个分支 gh_pages, 切换到这个分支。\n然后一直在此分支下开发，推送远程的时候也是推送到gh_pages同名远程分支。\n\n```bash\n$  git clone https://github.com/gengyc/gengyc.github.io\n$  cd gengyc.github.io\n$  git checkout -b gh_pages\n```\n\n## hexo流程\n\n#### 1. 新建本地站点\n安装完hexo后，在项目根目录(/gengyc.github.io)下，运行以下命令，会自动生成项目所需文件。\n```bash\n$  hexo init\n$  npm install\n```\n完成后，文件夹中目录如下：\n```\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|    └── _posts\n|\n└── themes\n\n因为要将此项目推送到远程GitHub，我们需要添加一个 .gitignore 文件，忽略掉安装的插件，因为其没必要提交到远程：\n\n// .gitignore\nnode_modules\n```\n\n然后，运行 `hexo server `启动站点。\n\n```bash\n$  hexo server   // 可简写为 hexo s\n```\n\n站点默认链接为 [http://0.0.0.0:4000](http://0.0.0.0:4000)  或 [http://localhost:4000](http://localhost:4000) ，在浏览器打开此地址即可看到站点了。\n保存编辑文章的时候，hexo server 会监听项目文件的改动，而且会自动刷新本地站点页面。\n\n#### 2. 新建文章\n\n```bash\n$  hexo new '文章标题'\n```\n\n会在 source/_posts/ 目录下生成一个新的 markdown 格式的文件。\n在此文件编辑和保存自己的新文章。\n\n#### 3. 生成 html  js 站点文件\n\n```bash\n$  hexo generate    // 可简写为 hexo g\n```\n\n会在 public 文件夹中生成页面需要的完整的html js等文件。\n\n#### 4. 发布\n\n发布之前，先需要在根目录的 _config.yml 配置文件里关联上你自己的 github 地址。\n\n\n```\n// _config.yml\n\ndeploy:\n  type: git\n  repository: https://github.com/gengyc/gengyc.github.io\n  branch: master\n\n// 然后在命令行运行 hexo deploy，首次运行会按要求填写GitHub账号和密码\n$  hexo deploy     // 可简写为 hexo d\n```\n\n这样，会把 public 文件夹里面的文件，推送到github仓库里。\n然后，在浏览器中打开 [https://gengyc.github.io/](https://gengyc.github.io/) 就可以看到所搭建的线上的静态页面了。\n\n\n\n## 安装主题\n在网上找到自己喜欢的主题，clone到 themes 文件夹下。\n以安装[even](https://github.com/ahonn/hexo-theme-even)主题为例，在根目录下运行如下命令：\n\n\n```bash\n$  git  clone  https://github.com/ahonn/hexo-theme-even  themes/even\n```\n\n修改根目录下的 _config.yml 文件，将主题名字改为 even\n\n\n```\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: even\n```\n\n运行以下命令就可以看到新主题的效果了：\n\n```bash\n$  hexo g    // 生成\n$  hexo s    // 开启本地服务预览\n$  hexo d    // 发布\n```\n\n一定要把主题文件也提交到远程仓库，可以自己自定义主题样式，换电脑后还可以同步自己配置的主题。\n此时本地的git仓库跟踪不到 /themes 文件下新加的主题文件。我们只需要把 /themes/even 文件目录下的 `.git` 文件夹删除就可以了。\n\n\n```bash\n$  rm -rf .git\n```\n然后 /themes/even 下的文件就可以被 git 跟踪到了。\n\n\n## 推送到远程\n\n\n文章发布完后，我们把本地仓库推送到远程仓库的 gh_pages 分支。\n\n\n```bash\n$  git commit -am 'add hexo'\n$  git push origin gh_pages\n```\n\n\n## 在新电脑上同步这个项目(包括主题)，步骤：\n\n\n$  git clone https://github.com/gengyc/gengyc.github.io\n$  cd gengyc.github.io      // 默认分支为 gh_pages\n$  npm install hexo -g\n// 此时直接运行npm install，不需要在项目根目录运行hexo init命令，否则会将所有文件初始化掉\n$  npm install\n$  hexo s        // 看是否能成功开启本地服务了\n$  hexo new 'new article title'\n$  hexo g\n$  hexo d\n$  git commit -am 'add hexo files'\n$  git push origin gh_pages\n\n\nend.\n\n\n\n","source":"_posts/使用Hexo和GitHub搭建博客教程，支持在新电脑同步管理项目和主题.md","raw":"---\ntitle: 使用Hexo和GitHub搭建博客教程，支持在新电脑同步管理项目和主题\ndate: 2016-11-11 10:59:32\ntags: hexo\n---\n\n使用 GitHubPages + hexo 可以很便捷地搭建个人博客，githubpages提供 300M 的免费空间，做博客够用了，hexo 是一个静态页面发布框架。\n下面介绍采用 gitHub + hexo 搭建个人博客，项目代码托管在GitHub，可以在不同电脑管理自己的博客。并且，自己下载的hexo主题也可以同步管理。\n\n<!-- more -->\n\n## 安装环境\n本地安装git, node\n\n## 安装hexo\n使用npm安装hexo，官方提供的详细安装方法：\n[https://hexo.io/zh-cn/docs/](https://hexo.io/zh-cn/docs/)\n\n安装一些必要的插件：\n\n```bash\n$  sudo  npm install hexo-deployer-git --save    //安装Git部署器\n$  sudo npm install hexo-generator-index --save \n$  sudo npm install hexo-generator-archive --save \n$  sudo npm install hexo-generator-category --save \n$  sudo npm install hexo-generator-tag --save \n$  sudo npm install hexo-server --save \n$  sudo npm install hexo-deployer-heroku --save \n$  sudo npm install hexo-deployer-rsync --save \n$  sudo npm install hexo-deployer-openshift --save \n$  sudo npm install hexo-renderer-marked@0.2 --save \n$  sudo npm install hexo-renderer-stylus@0.2 --save \n$  sudo npm install hexo-generator-feed@1 --save \n$  sudo npm install hexo-generator-sitemap@1 --save\n```\n\n## GitHub准备工作\n\n1.在github上新建一个仓库，命名规则为 `git用户名.github.io`。仓库默认有个master分支。\n\n2.另新建一个分支 gh_pages，并将此分支设置为 default_branch（默认分支）。\n该分支用来存放和管理整个开发项目的代码，我们只需要手动管理gh_pages分支。\n通过 `hexo d` 部署命令会将生成的文件自动提交到master分支。\n\n3.将GitHub的空项目仓库clone到本地。本地新建一个分支 gh_pages, 切换到这个分支。\n然后一直在此分支下开发，推送远程的时候也是推送到gh_pages同名远程分支。\n\n```bash\n$  git clone https://github.com/gengyc/gengyc.github.io\n$  cd gengyc.github.io\n$  git checkout -b gh_pages\n```\n\n## hexo流程\n\n#### 1. 新建本地站点\n安装完hexo后，在项目根目录(/gengyc.github.io)下，运行以下命令，会自动生成项目所需文件。\n```bash\n$  hexo init\n$  npm install\n```\n完成后，文件夹中目录如下：\n```\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|    └── _posts\n|\n└── themes\n\n因为要将此项目推送到远程GitHub，我们需要添加一个 .gitignore 文件，忽略掉安装的插件，因为其没必要提交到远程：\n\n// .gitignore\nnode_modules\n```\n\n然后，运行 `hexo server `启动站点。\n\n```bash\n$  hexo server   // 可简写为 hexo s\n```\n\n站点默认链接为 [http://0.0.0.0:4000](http://0.0.0.0:4000)  或 [http://localhost:4000](http://localhost:4000) ，在浏览器打开此地址即可看到站点了。\n保存编辑文章的时候，hexo server 会监听项目文件的改动，而且会自动刷新本地站点页面。\n\n#### 2. 新建文章\n\n```bash\n$  hexo new '文章标题'\n```\n\n会在 source/_posts/ 目录下生成一个新的 markdown 格式的文件。\n在此文件编辑和保存自己的新文章。\n\n#### 3. 生成 html  js 站点文件\n\n```bash\n$  hexo generate    // 可简写为 hexo g\n```\n\n会在 public 文件夹中生成页面需要的完整的html js等文件。\n\n#### 4. 发布\n\n发布之前，先需要在根目录的 _config.yml 配置文件里关联上你自己的 github 地址。\n\n\n```\n// _config.yml\n\ndeploy:\n  type: git\n  repository: https://github.com/gengyc/gengyc.github.io\n  branch: master\n\n// 然后在命令行运行 hexo deploy，首次运行会按要求填写GitHub账号和密码\n$  hexo deploy     // 可简写为 hexo d\n```\n\n这样，会把 public 文件夹里面的文件，推送到github仓库里。\n然后，在浏览器中打开 [https://gengyc.github.io/](https://gengyc.github.io/) 就可以看到所搭建的线上的静态页面了。\n\n\n\n## 安装主题\n在网上找到自己喜欢的主题，clone到 themes 文件夹下。\n以安装[even](https://github.com/ahonn/hexo-theme-even)主题为例，在根目录下运行如下命令：\n\n\n```bash\n$  git  clone  https://github.com/ahonn/hexo-theme-even  themes/even\n```\n\n修改根目录下的 _config.yml 文件，将主题名字改为 even\n\n\n```\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: even\n```\n\n运行以下命令就可以看到新主题的效果了：\n\n```bash\n$  hexo g    // 生成\n$  hexo s    // 开启本地服务预览\n$  hexo d    // 发布\n```\n\n一定要把主题文件也提交到远程仓库，可以自己自定义主题样式，换电脑后还可以同步自己配置的主题。\n此时本地的git仓库跟踪不到 /themes 文件下新加的主题文件。我们只需要把 /themes/even 文件目录下的 `.git` 文件夹删除就可以了。\n\n\n```bash\n$  rm -rf .git\n```\n然后 /themes/even 下的文件就可以被 git 跟踪到了。\n\n\n## 推送到远程\n\n\n文章发布完后，我们把本地仓库推送到远程仓库的 gh_pages 分支。\n\n\n```bash\n$  git commit -am 'add hexo'\n$  git push origin gh_pages\n```\n\n\n## 在新电脑上同步这个项目(包括主题)，步骤：\n\n\n$  git clone https://github.com/gengyc/gengyc.github.io\n$  cd gengyc.github.io      // 默认分支为 gh_pages\n$  npm install hexo -g\n// 此时直接运行npm install，不需要在项目根目录运行hexo init命令，否则会将所有文件初始化掉\n$  npm install\n$  hexo s        // 看是否能成功开启本地服务了\n$  hexo new 'new article title'\n$  hexo g\n$  hexo d\n$  git commit -am 'add hexo files'\n$  git push origin gh_pages\n\n\nend.\n\n\n\n","slug":"使用Hexo和GitHub搭建博客教程，支持在新电脑同步管理项目和主题","published":1,"updated":"2016-12-09T02:43:17.000Z","_id":"ciwh6bmvr0000aqsq9mgosxuu","comments":1,"layout":"post","photos":[],"link":"","content":"<p>使用 GitHubPages + hexo 可以很便捷地搭建个人博客，githubpages提供 300M 的免费空间，做博客够用了，hexo 是一个静态页面发布框架。<br>下面介绍采用 gitHub + hexo 搭建个人博客，项目代码托管在GitHub，可以在不同电脑管理自己的博客。并且，自己下载的hexo主题也可以同步管理。</p>\n<a id=\"more\"></a>\n<h2 id=\"安装环境\"><a href=\"#安装环境\" class=\"headerlink\" title=\"安装环境\"></a>安装环境</h2><p>本地安装git, node</p>\n<h2 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h2><p>使用npm安装hexo，官方提供的详细安装方法：<br><a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"external\">https://hexo.io/zh-cn/docs/</a></p>\n<p>安装一些必要的插件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">$  sudo  npm install hexo-deployer-git --save    //安装Git部署器</div><div class=\"line\">$  sudo npm install hexo-generator-index --save </div><div class=\"line\">$  sudo npm install hexo-generator-archive --save </div><div class=\"line\">$  sudo npm install hexo-generator-category --save </div><div class=\"line\">$  sudo npm install hexo-generator-tag --save </div><div class=\"line\">$  sudo npm install hexo-server --save </div><div class=\"line\">$  sudo npm install hexo-deployer-heroku --save </div><div class=\"line\">$  sudo npm install hexo-deployer-rsync --save </div><div class=\"line\">$  sudo npm install hexo-deployer-openshift --save </div><div class=\"line\">$  sudo npm install hexo-renderer-marked@0.2 --save </div><div class=\"line\">$  sudo npm install hexo-renderer-stylus@0.2 --save </div><div class=\"line\">$  sudo npm install hexo-generator-feed@1 --save </div><div class=\"line\">$  sudo npm install hexo-generator-sitemap@1 --save</div></pre></td></tr></table></figure>\n<h2 id=\"GitHub准备工作\"><a href=\"#GitHub准备工作\" class=\"headerlink\" title=\"GitHub准备工作\"></a>GitHub准备工作</h2><p>1.在github上新建一个仓库，命名规则为 <code>git用户名.github.io</code>。仓库默认有个master分支。</p>\n<p>2.另新建一个分支 gh_pages，并将此分支设置为 default_branch（默认分支）。<br>该分支用来存放和管理整个开发项目的代码，我们只需要手动管理gh_pages分支。<br>通过 <code>hexo d</code> 部署命令会将生成的文件自动提交到master分支。</p>\n<p>3.将GitHub的空项目仓库clone到本地。本地新建一个分支 gh_pages, 切换到这个分支。<br>然后一直在此分支下开发，推送远程的时候也是推送到gh_pages同名远程分支。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$  git <span class=\"built_in\">clone</span> https://github.com/gengyc/gengyc.github.io</div><div class=\"line\">$  <span class=\"built_in\">cd</span> gengyc.github.io</div><div class=\"line\">$  git checkout -b gh_pages</div></pre></td></tr></table></figure>\n<h2 id=\"hexo流程\"><a href=\"#hexo流程\" class=\"headerlink\" title=\"hexo流程\"></a>hexo流程</h2><h4 id=\"1-新建本地站点\"><a href=\"#1-新建本地站点\" class=\"headerlink\" title=\"1. 新建本地站点\"></a>1. 新建本地站点</h4><p>安装完hexo后，在项目根目录(/gengyc.github.io)下，运行以下命令，会自动生成项目所需文件。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$  hexo init</div><div class=\"line\">$  npm install</div></pre></td></tr></table></figure></p>\n<p>完成后，文件夹中目录如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">├── _config.yml</div><div class=\"line\">├── package.json</div><div class=\"line\">├── scaffolds</div><div class=\"line\">├── source</div><div class=\"line\">|    └── _posts</div><div class=\"line\">|</div><div class=\"line\">└── themes</div><div class=\"line\"></div><div class=\"line\">因为要将此项目推送到远程GitHub，我们需要添加一个 .gitignore 文件，忽略掉安装的插件，因为其没必要提交到远程：</div><div class=\"line\"></div><div class=\"line\">// .gitignore</div><div class=\"line\">node_modules</div></pre></td></tr></table></figure></p>\n<p>然后，运行 <code>hexo server</code>启动站点。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$  hexo server   // 可简写为 hexo s</div></pre></td></tr></table></figure>\n<p>站点默认链接为 <a href=\"http://0.0.0.0:4000\" target=\"_blank\" rel=\"external\">http://0.0.0.0:4000</a>  或 <a href=\"http://localhost:4000\" target=\"_blank\" rel=\"external\">http://localhost:4000</a> ，在浏览器打开此地址即可看到站点了。<br>保存编辑文章的时候，hexo server 会监听项目文件的改动，而且会自动刷新本地站点页面。</p>\n<h4 id=\"2-新建文章\"><a href=\"#2-新建文章\" class=\"headerlink\" title=\"2. 新建文章\"></a>2. 新建文章</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$  hexo new <span class=\"string\">'文章标题'</span></div></pre></td></tr></table></figure>\n<p>会在 source/_posts/ 目录下生成一个新的 markdown 格式的文件。<br>在此文件编辑和保存自己的新文章。</p>\n<h4 id=\"3-生成-html-js-站点文件\"><a href=\"#3-生成-html-js-站点文件\" class=\"headerlink\" title=\"3. 生成 html  js 站点文件\"></a>3. 生成 html  js 站点文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$  hexo generate    // 可简写为 hexo g</div></pre></td></tr></table></figure>\n<p>会在 public 文件夹中生成页面需要的完整的html js等文件。</p>\n<h4 id=\"4-发布\"><a href=\"#4-发布\" class=\"headerlink\" title=\"4. 发布\"></a>4. 发布</h4><p>发布之前，先需要在根目录的 _config.yml 配置文件里关联上你自己的 github 地址。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">// _config.yml</div><div class=\"line\"></div><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repository: https://github.com/gengyc/gengyc.github.io</div><div class=\"line\">  branch: master</div><div class=\"line\"></div><div class=\"line\">// 然后在命令行运行 hexo deploy，首次运行会按要求填写GitHub账号和密码</div><div class=\"line\">$  hexo deploy     // 可简写为 hexo d</div></pre></td></tr></table></figure>\n<p>这样，会把 public 文件夹里面的文件，推送到github仓库里。<br>然后，在浏览器中打开 <a href=\"https://gengyc.github.io/\">https://gengyc.github.io/</a> 就可以看到所搭建的线上的静态页面了。</p>\n<h2 id=\"安装主题\"><a href=\"#安装主题\" class=\"headerlink\" title=\"安装主题\"></a>安装主题</h2><p>在网上找到自己喜欢的主题，clone到 themes 文件夹下。<br>以安装<a href=\"https://github.com/ahonn/hexo-theme-even\" target=\"_blank\" rel=\"external\">even</a>主题为例，在根目录下运行如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$  git  <span class=\"built_in\">clone</span>  https://github.com/ahonn/hexo-theme-even  themes/even</div></pre></td></tr></table></figure>\n<p>修改根目录下的 _config.yml 文件，将主题名字改为 even</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Extensions</div><div class=\"line\">## Plugins: https://hexo.io/plugins/</div><div class=\"line\">## Themes: https://hexo.io/themes/</div><div class=\"line\">theme: even</div></pre></td></tr></table></figure>\n<p>运行以下命令就可以看到新主题的效果了：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$  hexo g    // 生成</div><div class=\"line\">$  hexo s    // 开启本地服务预览</div><div class=\"line\">$  hexo d    // 发布</div></pre></td></tr></table></figure>\n<p>一定要把主题文件也提交到远程仓库，可以自己自定义主题样式，换电脑后还可以同步自己配置的主题。<br>此时本地的git仓库跟踪不到 /themes 文件下新加的主题文件。我们只需要把 /themes/even 文件目录下的 <code>.git</code> 文件夹删除就可以了。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$  rm -rf .git</div></pre></td></tr></table></figure>\n<p>然后 /themes/even 下的文件就可以被 git 跟踪到了。</p>\n<h2 id=\"推送到远程\"><a href=\"#推送到远程\" class=\"headerlink\" title=\"推送到远程\"></a>推送到远程</h2><p>文章发布完后，我们把本地仓库推送到远程仓库的 gh_pages 分支。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$  git commit -am <span class=\"string\">'add hexo'</span></div><div class=\"line\">$  git push origin gh_pages</div></pre></td></tr></table></figure>\n<h2 id=\"在新电脑上同步这个项目-包括主题-，步骤：\"><a href=\"#在新电脑上同步这个项目-包括主题-，步骤：\" class=\"headerlink\" title=\"在新电脑上同步这个项目(包括主题)，步骤：\"></a>在新电脑上同步这个项目(包括主题)，步骤：</h2><p>$  git clone <a href=\"https://github.com/gengyc/gengyc.github.io\" target=\"_blank\" rel=\"external\">https://github.com/gengyc/gengyc.github.io</a><br>$  cd gengyc.github.io      // 默认分支为 gh_pages<br>$  npm install hexo -g<br>// 此时直接运行npm install，不需要在项目根目录运行hexo init命令，否则会将所有文件初始化掉<br>$  npm install<br>$  hexo s        // 看是否能成功开启本地服务了<br>$  hexo new ‘new article title’<br>$  hexo g<br>$  hexo d<br>$  git commit -am ‘add hexo files’<br>$  git push origin gh_pages</p>\n<p>end.</p>\n","excerpt":"<p>使用 GitHubPages + hexo 可以很便捷地搭建个人博客，githubpages提供 300M 的免费空间，做博客够用了，hexo 是一个静态页面发布框架。<br>下面介绍采用 gitHub + hexo 搭建个人博客，项目代码托管在GitHub，可以在不同电脑管理自己的博客。并且，自己下载的hexo主题也可以同步管理。</p>","more":"<h2 id=\"安装环境\"><a href=\"#安装环境\" class=\"headerlink\" title=\"安装环境\"></a>安装环境</h2><p>本地安装git, node</p>\n<h2 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h2><p>使用npm安装hexo，官方提供的详细安装方法：<br><a href=\"https://hexo.io/zh-cn/docs/\">https://hexo.io/zh-cn/docs/</a></p>\n<p>安装一些必要的插件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">$  sudo  npm install hexo-deployer-git --save    //安装Git部署器</div><div class=\"line\">$  sudo npm install hexo-generator-index --save </div><div class=\"line\">$  sudo npm install hexo-generator-archive --save </div><div class=\"line\">$  sudo npm install hexo-generator-category --save </div><div class=\"line\">$  sudo npm install hexo-generator-tag --save </div><div class=\"line\">$  sudo npm install hexo-server --save </div><div class=\"line\">$  sudo npm install hexo-deployer-heroku --save </div><div class=\"line\">$  sudo npm install hexo-deployer-rsync --save </div><div class=\"line\">$  sudo npm install hexo-deployer-openshift --save </div><div class=\"line\">$  sudo npm install hexo-renderer-marked@0.2 --save </div><div class=\"line\">$  sudo npm install hexo-renderer-stylus@0.2 --save </div><div class=\"line\">$  sudo npm install hexo-generator-feed@1 --save </div><div class=\"line\">$  sudo npm install hexo-generator-sitemap@1 --save</div></pre></td></tr></table></figure>\n<h2 id=\"GitHub准备工作\"><a href=\"#GitHub准备工作\" class=\"headerlink\" title=\"GitHub准备工作\"></a>GitHub准备工作</h2><p>1.在github上新建一个仓库，命名规则为 <code>git用户名.github.io</code>。仓库默认有个master分支。</p>\n<p>2.另新建一个分支 gh_pages，并将此分支设置为 default_branch（默认分支）。<br>该分支用来存放和管理整个开发项目的代码，我们只需要手动管理gh_pages分支。<br>通过 <code>hexo d</code> 部署命令会将生成的文件自动提交到master分支。</p>\n<p>3.将GitHub的空项目仓库clone到本地。本地新建一个分支 gh_pages, 切换到这个分支。<br>然后一直在此分支下开发，推送远程的时候也是推送到gh_pages同名远程分支。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$  git <span class=\"built_in\">clone</span> https://github.com/gengyc/gengyc.github.io</div><div class=\"line\">$  <span class=\"built_in\">cd</span> gengyc.github.io</div><div class=\"line\">$  git checkout -b gh_pages</div></pre></td></tr></table></figure>\n<h2 id=\"hexo流程\"><a href=\"#hexo流程\" class=\"headerlink\" title=\"hexo流程\"></a>hexo流程</h2><h4 id=\"1-新建本地站点\"><a href=\"#1-新建本地站点\" class=\"headerlink\" title=\"1. 新建本地站点\"></a>1. 新建本地站点</h4><p>安装完hexo后，在项目根目录(/gengyc.github.io)下，运行以下命令，会自动生成项目所需文件。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$  hexo init</div><div class=\"line\">$  npm install</div></pre></td></tr></table></figure></p>\n<p>完成后，文件夹中目录如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">├── _config.yml</div><div class=\"line\">├── package.json</div><div class=\"line\">├── scaffolds</div><div class=\"line\">├── source</div><div class=\"line\">|    └── _posts</div><div class=\"line\">|</div><div class=\"line\">└── themes</div><div class=\"line\"></div><div class=\"line\">因为要将此项目推送到远程GitHub，我们需要添加一个 .gitignore 文件，忽略掉安装的插件，因为其没必要提交到远程：</div><div class=\"line\"></div><div class=\"line\">// .gitignore</div><div class=\"line\">node_modules</div></pre></td></tr></table></figure></p>\n<p>然后，运行 <code>hexo server</code>启动站点。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$  hexo server   // 可简写为 hexo s</div></pre></td></tr></table></figure>\n<p>站点默认链接为 <a href=\"http://0.0.0.0:4000\">http://0.0.0.0:4000</a>  或 <a href=\"http://localhost:4000\">http://localhost:4000</a> ，在浏览器打开此地址即可看到站点了。<br>保存编辑文章的时候，hexo server 会监听项目文件的改动，而且会自动刷新本地站点页面。</p>\n<h4 id=\"2-新建文章\"><a href=\"#2-新建文章\" class=\"headerlink\" title=\"2. 新建文章\"></a>2. 新建文章</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$  hexo new <span class=\"string\">'文章标题'</span></div></pre></td></tr></table></figure>\n<p>会在 source/_posts/ 目录下生成一个新的 markdown 格式的文件。<br>在此文件编辑和保存自己的新文章。</p>\n<h4 id=\"3-生成-html-js-站点文件\"><a href=\"#3-生成-html-js-站点文件\" class=\"headerlink\" title=\"3. 生成 html  js 站点文件\"></a>3. 生成 html  js 站点文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$  hexo generate    // 可简写为 hexo g</div></pre></td></tr></table></figure>\n<p>会在 public 文件夹中生成页面需要的完整的html js等文件。</p>\n<h4 id=\"4-发布\"><a href=\"#4-发布\" class=\"headerlink\" title=\"4. 发布\"></a>4. 发布</h4><p>发布之前，先需要在根目录的 _config.yml 配置文件里关联上你自己的 github 地址。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">// _config.yml</div><div class=\"line\"></div><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repository: https://github.com/gengyc/gengyc.github.io</div><div class=\"line\">  branch: master</div><div class=\"line\"></div><div class=\"line\">// 然后在命令行运行 hexo deploy，首次运行会按要求填写GitHub账号和密码</div><div class=\"line\">$  hexo deploy     // 可简写为 hexo d</div></pre></td></tr></table></figure>\n<p>这样，会把 public 文件夹里面的文件，推送到github仓库里。<br>然后，在浏览器中打开 <a href=\"https://gengyc.github.io/\">https://gengyc.github.io/</a> 就可以看到所搭建的线上的静态页面了。</p>\n<h2 id=\"安装主题\"><a href=\"#安装主题\" class=\"headerlink\" title=\"安装主题\"></a>安装主题</h2><p>在网上找到自己喜欢的主题，clone到 themes 文件夹下。<br>以安装<a href=\"https://github.com/ahonn/hexo-theme-even\">even</a>主题为例，在根目录下运行如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$  git  <span class=\"built_in\">clone</span>  https://github.com/ahonn/hexo-theme-even  themes/even</div></pre></td></tr></table></figure>\n<p>修改根目录下的 _config.yml 文件，将主题名字改为 even</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Extensions</div><div class=\"line\">## Plugins: https://hexo.io/plugins/</div><div class=\"line\">## Themes: https://hexo.io/themes/</div><div class=\"line\">theme: even</div></pre></td></tr></table></figure>\n<p>运行以下命令就可以看到新主题的效果了：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$  hexo g    // 生成</div><div class=\"line\">$  hexo s    // 开启本地服务预览</div><div class=\"line\">$  hexo d    // 发布</div></pre></td></tr></table></figure>\n<p>一定要把主题文件也提交到远程仓库，可以自己自定义主题样式，换电脑后还可以同步自己配置的主题。<br>此时本地的git仓库跟踪不到 /themes 文件下新加的主题文件。我们只需要把 /themes/even 文件目录下的 <code>.git</code> 文件夹删除就可以了。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$  rm -rf .git</div></pre></td></tr></table></figure>\n<p>然后 /themes/even 下的文件就可以被 git 跟踪到了。</p>\n<h2 id=\"推送到远程\"><a href=\"#推送到远程\" class=\"headerlink\" title=\"推送到远程\"></a>推送到远程</h2><p>文章发布完后，我们把本地仓库推送到远程仓库的 gh_pages 分支。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$  git commit -am <span class=\"string\">'add hexo'</span></div><div class=\"line\">$  git push origin gh_pages</div></pre></td></tr></table></figure>\n<h2 id=\"在新电脑上同步这个项目-包括主题-，步骤：\"><a href=\"#在新电脑上同步这个项目-包括主题-，步骤：\" class=\"headerlink\" title=\"在新电脑上同步这个项目(包括主题)，步骤：\"></a>在新电脑上同步这个项目(包括主题)，步骤：</h2><p>$  git clone <a href=\"https://github.com/gengyc/gengyc.github.io\">https://github.com/gengyc/gengyc.github.io</a><br>$  cd gengyc.github.io      // 默认分支为 gh_pages<br>$  npm install hexo -g<br>// 此时直接运行npm install，不需要在项目根目录运行hexo init命令，否则会将所有文件初始化掉<br>$  npm install<br>$  hexo s        // 看是否能成功开启本地服务了<br>$  hexo new ‘new article title’<br>$  hexo g<br>$  hexo d<br>$  git commit -am ‘add hexo files’<br>$  git push origin gh_pages</p>\n<p>end.</p>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ciwh6bmvr0000aqsq9mgosxuu","tag_id":"ciwh6bmvz0001aqsq2ekip2dh","_id":"ciwh6bmw40002aqsqeswuqnv1"}],"Tag":[{"name":"hexo","_id":"ciwh6bmvz0001aqsq2ekip2dh"}]}}